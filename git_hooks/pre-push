remote="$1"
url="$2"

echo "🚀 Deploying new feature to IMC Prosperity 2 challenge!"

# Example usage of the remote URL in the script
echo "Pushing to URL: https://github.com/CaleHarr/Prosperity_year2.git\n"


# Fetch the latest changes from the remote main branch
git fetch

# Check if your local branch is behind the remote main branch
if git log HEAD..origin/main --oneline | grep -q .; then
	echo "❌❌❌"
	echo "❌ Your branch is behind origin/main. Consider pulling the latest changes before pushing."
	echo "❌❌❌"
	exit 1 # Prevents the push
else
  echo "✅ Your branch is up-to-date with origin/main.\n"
fi


# Check if the local main branch is behind the remote main branch
# Adjust "origin" and "main" as necessary for your remote and branch names
if git fetch --quiet && [ $(git rev-list --count main..origin/main) -gt 0 ]; then
	echo >&2 "❌❌❌"
    echo >&2 "❌ Your local main branch is behind the remote main branch. Please pull the latest changes before pushing."
	echo >&2 "❌❌❌"
    exit 1
fi

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
	if test "$local_oid" = "$zero"
	then
		# Handle delete
		:
	else
		if test "$remote_oid" = "$zero"
		then
			# New branch, examine all commits
			range="$local_oid"
		else
			# Update to existing branch, examine new commits
			range="$remote_oid..$local_oid"
		fi

		# Check for WIP commit
		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
		if test -n "$commit"
		then
			echo >&2 "Found WIP commit in $local_ref, not pushing"
			exit 1
		fi
	fi
done

echo "💵💵💵💵💵💵"
echo "💵💵💵💵💵💵"
echo "💰💰 Operation completed successfully. Time to make some cash 💸💸"
echo "💵💵💵💵💵💵"
echo "💵💵💵💵💵💵\n"
exit 0